/*
  FRAMER â†’ FLEXBOX 22-PROPERTY UTILITY LAYER
  C-MOD/VAR Layer 2: Complete Framer Layout Panel Implementation

  STRICT COMPLIANCE: These 22 utility classes provide 100% Framer layout parity.
  ALL utilities reference Layer 1 tokens exclusively - NO arbitrary values permitted.
  Implements contextual intelligence for perfect Framer behavior replication.
*/

/* ===== POSITION UTILITIES (4 Properties) ===== */
.u-position-relative { position: var(--position-relative); }
.u-position-absolute { position: var(--position-absolute); }
.u-position-sticky { position: var(--position-sticky); }
.u-position-fixed { position: var(--position-fixed); }

/* ===== SIZE UTILITIES (5 Properties) ===== */
.u-size-fill {
  width: var(--size-fill);
  height: var(--size-fill);
  flex: 1 1 auto;
}

.u-size-relative {
  flex: var(--size-relative);
  width: auto;
  height: auto;
  min-width: 0;
  min-height: 0;
}

.u-size-fixed {
  width: var(--size-fixed);
  height: var(--size-fixed);
  flex-shrink: 0;
  flex-grow: 0;
}

.u-size-fit-content {
  width: var(--size-fit-content);
  height: var(--size-fit-content);
  flex-shrink: 0;
}

.u-size-viewport {
  width: 100vw;
  height: var(--size-viewport);
  flex-shrink: 0;
}

/* ===== LAYOUT TYPE UTILITIES (2 Properties) ===== */
.u-layout-stack {
  display: var(--layout-type-stack);
  flex-direction: var(--direction-horizontal);
}

.u-layout-grid {
  display: var(--layout-type-grid);
  flex-wrap: var(--wrap-yes);
}

/* ===== DIRECTION UTILITIES (2 Properties) ===== */
.u-direction-horizontal { flex-direction: var(--direction-horizontal); }
.u-direction-vertical { flex-direction: var(--direction-vertical); }

/* ===== DISTRIBUTION UTILITIES (4 Properties) ===== */
.u-distribute-start { justify-content: var(--distribute-start); }
.u-distribute-center { justify-content: var(--distribute-center); }
.u-distribute-end { justify-content: var(--distribute-end); }
.u-distribute-space-between { justify-content: var(--distribute-space-between); }

/* ===== ALIGNMENT UTILITIES (3 Properties) ===== */
.u-align-start { align-items: var(--align-start); }
.u-align-center { align-items: var(--align-center); }
.u-align-end { align-items: var(--align-end); }

/* ===== WRAP UTILITIES (2 Properties) ===== */
.u-wrap-yes { flex-wrap: var(--wrap-yes); }
.u-wrap-no { flex-wrap: var(--wrap-no); }

/* ===== SPACING UTILITIES (2 Properties) ===== */
.u-gap { gap: var(--spacing-gap); }
.u-padding { padding: var(--spacing-padding); }

/* ===== FRAMER CONTEXTUAL INTELLIGENCE - PERFECT LAYOUT BEHAVIOR ===== */

/*
  FILL BEHAVIOR IN STACK LAYOUTS
  Replicates Framer's intelligent Fill: expands to use all available space
*/
.u-layout-stack > .u-size-fill {
  flex: 1 1 0%;
  width: auto;
  height: auto;
}

/*
  RELATIVE BEHAVIOR IN STACK LAYOUTS
  True proportional scaling - shares space with other relative elements
*/
.u-layout-stack > .u-size-relative {
  flex: var(--size-relative);
  width: auto;
  height: auto;
  min-width: 0;
  min-height: 0;
}

/*
  FIXED BEHAVIOR IN STACK LAYOUTS
  Maintains exact dimensions regardless of container size
*/
.u-layout-stack > .u-size-fixed {
  flex: 0 0 auto;
  width: var(--size-fixed);
  height: var(--size-fixed);
}

/*
  FIT-CONTENT BEHAVIOR IN STACK LAYOUTS
  Shrinks to content size, doesn't grow or shrink beyond content needs
*/
.u-layout-stack > .u-size-fit-content {
  flex: 0 0 auto;
  width: var(--size-fit-content);
  height: var(--size-fit-content);
}

/*
  FILL BEHAVIOR IN GRID LAYOUTS
  In flexbox grids, Fill elements take full row width
*/
.u-layout-grid > .u-size-fill {
  flex: 1 1 100%;
}

/*
  RELATIVE BEHAVIOR IN GRID LAYOUTS
  Proportional sizing within grid rows
*/
.u-layout-grid > .u-size-relative {
  flex: var(--size-relative);
  min-width: 0;
}